/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

main {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.hidden-h2 {
  display: none;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

a {
  background-color: transparent;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  padding: 0;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

.footer__container,
.posts__container,
.form__container,
.about__container,
.header-content__container,
.header-menu__container {
  width: min(100% - 40px, 1300px);
  margin-inline: auto;
}

.posts h2,
.about h2 {
  margin-top: 0;
}

*,
*::before,
::after {
  box-sizing: border-box;
}

html {
  color: #637588;
  font-family: "Roboto", sans-serif;
  font-size: 16px;
  overflow-y: scroll;
}

h1 {
  text-align: center;
  letter-spacing: 0.08em;
  color: #ffffff;
  font-family: "Roboto Slab", serif;
  font-weight: 300;
  line-height: 1.2em;
}

h2 {
  letter-spacing: 0.1em;
  color: #2d3651;
  font-family: "Roboto Slab", serif;
  line-height: 1.2em;
}

h3 {
  letter-spacing: 0.05em;
  color: #637588;
  font-size: 1.125rem;
}

a {
  text-decoration: none;
  color: #ffffff;
}

p {
  color: #637588;
}

input:focus {
  outline: none;
}

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 250px;
  height: 60px;
  background-color: rgba(255, 255, 255, 0.1);
  border-width: 2px;
  border-style: solid;
  padding: 0.5em 1em;
  letter-spacing: 0.1em;
  transition: background-color 0.25s;
}

.btn:hover {
  background-color: #d66926;
}

.btn--light {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: #ffffff;
}

.btn--primary {
  background-color: rgba(45, 54, 81, 0.8);
  border-color: #2d3651;
  height: 60px;
  font-size: 1.125rem;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.header {
  display: grid;
  align-items: center;
  background-color: #2d3651;
  background-image: url(../img/img-header.png);
  background-position: 50% 50%;
  background-size: cover;
  min-height: 100vh;
  position: relative;
  padding: 150px 0;
  color: #ffffff;
}

.header-overlay {
  background-color: #2d3651;
  opacity: 0.8;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.header-menu {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  left: 0;
}

.header-menu__container {
  display: grid;
  align-items: center;
  gap: 20px;
  grid-template-columns: auto 1fr;
}

.header-logo {
  font-size: 1.5rem;
  letter-spacing: 0.22em;
}

.header-logo__link {
  padding: 20px 20px 20px 0;
  display: block;
}

.header-logo__accent {
  display: inline-block;
  padding: 14px 1px 13px 5px;
  border: 3px solid #d53d27;
  margin-right: 4px;
}

.header-navbar__btn {
  position: relative;
  width: 30px;
  height: 22.5px;
  margin: 20px 0;
  cursor: pointer;
  transition: 0.5s ease-in-out;
  transform: rotate(0deg);
}

.header-navbar__btn-row {
  position: absolute;
  display: block;
  width: 50%;
  height: 3px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  background: #ffffff;
}

.header-navbar__btn-row:nth-child(even) {
  left: 50%;
  border-radius: 0 3px 3px 0;
}

.header-navbar__btn-row:nth-child(odd) {
  left: 0;
  border-radius: 3px 0 0 3px;
}

.header-navbar__btn-row:nth-child(1),
.header-navbar__btn-row:nth-child(2) {
  top: 0;
}

.header-navbar__btn-row:nth-child(3),
.header-navbar__btn-row:nth-child(4) {
  top: 9px;
}

.header-navbar__btn-row:nth-child(5),
.header-navbar__btn-row:nth-child(6) {
  top: 18px;
}

.header-navbar__btn.active span:nth-child(1),
.header-navbar__btn.active span:nth-child(6) {
  transform: rotate(45deg);
}

.header-navbar__btn.active span:nth-child(2),
.header-navbar__btn.active span:nth-child(5) {
  transform: rotate(-45deg);
}

.header-navbar__btn.active span:nth-child(1) {
  top: 3.5px;
  left: 2.5px;
}

.header-navbar__btn.active span:nth-child(2) {
  top: 3.5px;
  left: calc(50% - 2.5px);
}

.header-navbar__btn.active span:nth-child(3) {
  left: -50%;
  opacity: 0;
}

.header-navbar__btn.active span:nth-child(4) {
  left: 100%;
  opacity: 0;
}

.header-navbar__btn.active span:nth-child(5) {
  top: 14.5px;
  left: 2.5px;
}

.header-navbar__btn.active span:nth-child(6) {
  top: 14.5px;
  left: calc(50% - 2.5px);
}

.header-navbar__list {
  margin: 0 -10px 0;
  padding: 0;
  list-style: none;
}

.header-navbar__link {
  display: block;
  transition: color 0.5s;
  letter-spacing: 0.0999em;
  font-size: 1.125rem;
}

.header-navbar__link:hover,
.header-navbar__link:focus {
  color: #d66926;
}

.header-content {
  position: relative;
  z-index: 1;
}

.header-content__title {
  text-align: center;
}

.header-content__actions {
  display: flex;
  justify-content: center;
  gap: 20px;
}

.skills__container {
  margin-bottom: 20px;
  display: grid;
  grid-auto-rows: calc(33.3333vh - 13.3333333333px);
}

.skills__actions {
  display: flex;
  justify-content: center;
}

.skill-item {
  position: relative;
  overflow: hidden;
}

.skill-item:hover .skill-item__link {
  color: #d66926;
}

.skill-item:hover .skill-item__image {
  transform: scale(1.1);
}

.skill-item:hover .skill-item__overlay {
  opacity: 0.95;
}

.skill-item__title {
  z-index: 1;
  margin: 0;
  letter-spacing: 0.1em;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item__link {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 20px;
  transition: color 0.5s;
}

.skill-item__image {
  transition: transform 0.5s;
  background-color: #2d3651;
  background-image: url("../img/img-html.png");
  background-position: center;
  background-size: cover;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item__overlay {
  transition: opacity 0.5s;
  opacity: 0.8;
  background-color: #2d3651;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item:nth-of-type(1) {
  grid-area: a1;
}

.skill-item:nth-of-type(2) {
  grid-area: a2;
}

.skill-item:nth-of-type(3) {
  grid-area: a3;
}

.skill-item:nth-of-type(4) {
  grid-area: a4;
}

.skill-item:nth-of-type(5) {
  grid-area: a5;
}

.skill-item:nth-of-type(6) {
  grid-area: a6;
}

.skill-item:nth-of-type(7) {
  grid-area: a7;
}

.skill-item:nth-of-type(8) {
  grid-area: a8;
}

.skill-item:nth-of-type(9) {
  grid-area: a9;
}

.about {
  padding-top: 100px;
  padding-bottom: 100px;
  letter-spacing: 0.055em;
  background-color: #e5e5e5;
}

.about__container {
  display: grid;
}

.about__content p:first-of-type {
  position: relative;
  margin-top: -5px;
}

.about__content p:first-of-type::after {
  position: absolute;
  top: 0;
  width: 2px;
  height: 200px;
  content: "";
  background-color: rgba(99, 117, 136, 0.1);
}

.about__content p:last-of-type {
  margin: 0;
}

.about__image {
  display: grid;
  align-content: center;
  justify-content: center;
}

.about__image img {
  max-width: 100%;
  max-height: 480px;
}

.form {
  padding: 30px 0;
  background-color: #2d3651;
}

.form__container {
  display: grid;
  gap: 20px;
}

.form .btn--primary {
  width: 100%;
  color: #ffffff;
  border-color: rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.2);
  background-color: rgba(255, 255, 255, 0.1);
}

.form .btn--primary:hover,
.form .btn--primary:focus {
  cursor: pointer;
  border-color: #ffffff;
  background-color: #d66926;
}

.form-item__input {
  display: block;
  width: 100%;
  height: 60px;
  padding-right: 30px;
  padding-left: 30px;
  transition: background-color 0.5s, border-color 0.5s;
  letter-spacing: 0.15em;
  color: #ffffff;
  border: 2px solid rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.25);
  background-color: rgba(255, 255, 255, 0.05);
  font-size: 1.125rem;
}

.form-item__input::placeholder {
  color: #637588;
}

.form-item__input:hover,
.form-item__input:focus {
  border-color: rgba(255, 255, 255, 0.15);
  border-bottom-color: #ffffff;
  background-color: rgba(255, 255, 255, 0.15);
}

.form-item__input:hover ::placeholder,
.form-item__input:focus ::placeholder {
  color: #8c9bab;
}

.posts__grid {
  display: grid;
  padding-bottom: 20px;
  gap: 20px;
}

.post-item {
  transition: background-color 0.5s;
  background-color: #f2f2f2;
}

.post-item:hover {
  background-color: #d8d8d8;
}

.post-item:hover .post-item__image img {
  transform: scale(1.1);
}

.post-item:hover h3 {
  color: #2d3651;
}

.post-item:hover p {
  color: #2d3651;
}

.post-item__link {
  display: grid;
  overflow: hidden;
  height: 100%;
  grid-template-rows: 300px 1fr;
}

.post-item__image {
  display: flex;
  overflow: hidden;
  align-content: center;
  justify-content: center;
  background-color: #2d3651;
}

.post-item__image img {
  width: 100%;
  transition: transform 0.5s;
  object-fit: cover;
}

.post-item__caption {
  display: grid;
  align-content: center;
  padding: 20px;
}

.post-item__caption h3 {
  transition: color 0.5s;
  text-align: center;
  font-family: "Roboto Slab", serif;
}

.post-item__caption p {
  transition: color 0.5s;
  text-align: center;
}

.post-item:nth-of-type(1) {
  grid-area: p1;
}

.post-item:nth-of-type(2) {
  grid-area: p2;
}

.post-item:nth-of-type(3) {
  grid-area: p3;
}

.post-item:nth-of-type(4) {
  grid-area: p4;
}

.post-item:nth-of-type(5) {
  grid-area: p5;
}

.post-item:nth-of-type(6) {
  grid-area: p6;
}

.footer {
  padding: 50px 20px 70px;
  text-align: center;
  background-color: #2d3651;
}

.footer__social {
  position: relative;
  display: grid;
  justify-content: center;
  margin-bottom: 40px;
  grid-template-columns: repeat(auto-fit, minmax(50px, max-content));
}

.footer__social::after {
  position: absolute;
  bottom: -20px;
  left: calc(50% - 37.5px);
  width: 75px;
  height: 2px;
  content: "";
  background-color: rgba(255, 255, 255, 0.1);
}

.footer__social a {
  display: block;
  padding: 10px;
  transition: color 0.5s;
}

.footer__social a:hover,
.footer__social a:focus {
  color: #d66926;
}

.footer__social .fab {
  font-size: 36px;
}

.footer__copy span:nth-of-type(1) {
  margin-right: -0.5em;
  letter-spacing: 0.33em;
  font-weight: 100;
}

.footer__copy span:nth-of-type(2) {
  letter-spacing: 0.05em;
  color: #e5e5e5;
  font-weight: 700;
}

@media (min-width: 576px) {
  .posts__actions {
    display: flex;
    justify-content: center;
  }

  .btn--primary {
    width: 350px;
  }

  .skills {
    padding: 10px;
  }

  .skills__container {
    gap: 10px;
  }

  .skills__actions {
    margin-bottom: 30px;
  }
}

@media (min-height: 601px) {
  .skills__container {
    grid-auto-rows: calc(33.3333vh - 13.3333333333px);
  }
}

@media (min-height: 691px) {
  .skill-item {
    min-height: calc(33.3333vh - 13.3333px);
  }
}

@media (min-width: 768px) {
  .header-navbar__btn {
    display: none;
  }

  .header-navbar__list {
    display: grid;
    justify-content: end;
    gap: 20px;
    grid-template-columns: repeat(auto-fit, minmax(2em, max-content));
    margin: 0 -10px 0;
    padding: 0;
    list-style: none;
  }

  .header-navbar__link {
    padding: 20px 10px;
  }

  .skill-item__title {
    font-size: 1.25rem;
  }

  .form__container {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 992px) {

  .posts,
  .about {
    padding-top: 100px;
    padding-bottom: 100px;
  }

  h1 {
    font-size: 3.75rem;
  }

  h2 {
    margin-bottom: 3rem;
    font-size: 2.5rem;
  }

  .btn--light {
    width: 250px;
    height: 60px;
    font-size: 1.125rem;
  }

  .header-content__title {
    margin: 0 0 53px;
  }

  .skills__container {
    grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
    grid-template-columns: repeat(4, 1fr);
  }

  .about__container {
    gap: 100px;
    grid-template-columns: 1fr 271px;
  }

  .about__content p {
    font-size: 1.125rem;
  }

  .about__content p:first-of-type::after {
    right: -50px;
  }

  .posts__grid {
    grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (max-width: 991.8px) and (min-width: 768px) {

  .posts,
  .about {
    padding-top: 80px;
    padding-bottom: 80px;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    margin-bottom: 2.625rem;
    font-size: 2rem;
  }

  .btn--light {
    width: 200px;
    height: 50px;
    font-size: 1.125rem;
  }

  .header-content__title {
    margin: 0 0 43px;
  }

  .skills__container {
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
    grid-template-columns: repeat(3, 1fr);
  }

  .about__container {
    gap: 40px;
    grid-template-columns: 1fr 271px;
  }

  .about__content p:first-of-type::after {
    right: -20px;
  }

  .posts__grid {
    grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 767.8px) {

  .posts,
  .about {
    padding-top: 60px;
    padding-bottom: 60px;
  }

  h1 {
    font-size: 1.875rem;
  }

  .btn--light {
    width: 170px;
    height: 40px;
    font-size: 1.125rem;
  }

  .header-menu {
    background-color: rgba(68, 89, 110, 0.25);
    box-shadow: -3px 3px 20px -10px black;
  }

  .header-navbar {
    display: flex;
    justify-content: flex-end;
  }

  .header-navbar__list {
    position: absolute;
    top: 100%;
    right: 20px;
    display: none;
    text-align: right;
    letter-spacing: 0.1em;
    background-color: rgba(68, 89, 110, 0.9);
    margin: 0;
    padding: 0;
    list-style: none;
    box-shadow: -3px 3px 20px -10px black;
  }

  .header-navbar__item {
    margin: 20px 10px;
  }

  .header-navbar__link {
    padding: 10px 20px;
  }

  .header-content__title {
    margin: 0 0 33px;
  }

  .skill-item__title {
    font-size: 1.125rem;
  }
}

@media (max-width: 767.8px) and (min-width: 576px) {
  h2 {
    margin-bottom: 2.25rem;
    font-size: 1.5rem;
  }

  .skills__container {
    grid-template-areas: "a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
    grid-template-columns: repeat(2, 1fr);
  }

  .about__container {
    gap: 20px;
    grid-template-columns: 1fr 236px;
  }

  .about__content p:first-of-type::after {
    right: -10px;
  }

  .form__container {
    grid-template-columns: repeat(2, 1fr);
  }

  .form-item:nth-of-type(1) {
    grid-column: 1/span 2;
  }

  .posts__grid {
    grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-height: 690px) {
  .skills__container {
    grid-auto-rows: calc(230px - 13.3333333333px);
  }

  .skill-item {
    min-height: 216.6667px;
  }
}

@media (max-width: 575.8px) {
  h2 {
    margin-bottom: 2.25rem;
    text-align: center;
    font-size: 1.5rem;
  }

  .btn--primary {
    width: 100%;
  }

  .header-content__actions {
    flex-direction: column;
    align-items: center;
  }

  .skills {
    padding: 20px;
  }

  .skills__container {
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
    grid-template-columns: repeat(1, 1fr);
    gap: 20px;
  }

  .about__container {
    gap: 20px;
    grid-template-columns: 1fr;
  }

  .about__content p:first-of-type::after {
    display: none;
  }

  .posts__grid {
    grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    grid-template-columns: 1fr;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
